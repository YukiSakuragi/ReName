import java.io.*;
import java.util.*; // HashMap を使う際にimport

public class TIS20140227 {
	String data_file;
	String out_file;

	// コンストラクタ
	TIS20140227(String dfile) {
		data_file = dfile;
		out_file = "term_frequency.txt";
	}
	
	//辞書をHashに格納するメソッド
	void readDic(HashMap<String, String> hm) {
		try
		{
			BufferedReader br = new BufferedReader(
										new InputStreamReader(
											new FileInputStream("C:/Users/seta/Desktop/配布物/資料/dictionary.csv"), "UTF-8"));

			String line;
			while( (line = br.readLine() ) != null ) {
			    line = line.replaceAll("\"","");
			    line = line.replaceAll("\"","");
				String[] data = line.split(","); //データを分割
				// data[0]:日本語, data[1]:英語
				//
				// 単語の出現頻度の集計
				//
				if( hm.containsKey( data[0] ) ){ //すでにその単語が格納されているとき
					hm.put( data[0], data[1] );
				}
				else { //その単語を初めてHashMapに格納するとき
					hm.put( data[0], data[1] );
				}
			} //end while
		}
		catch(Exception e) { // ファイル読み込みエラー時の処理
			System.out.println("I/O error at readFile \n" + e);
			System.exit(1); //プログラムの終了
		}
	}


	//インプットファイルの修正箇所を英語から英語の名前を付けるメソッド
	void readFile(HashMap<String, String> hm, String infile) {
		try
		{
			BufferedReader br = new BufferedReader(
										new InputStreamReader(
											new FileInputStream(infile), "UTF-8"));

			System.out.println("*");
			String line;
			while( (line = br.readLine() ) != null ) {
				
				//変更箇所を検出
				if(line.substring(0,4) == "<ATTR"){
					//変更処理を以下で行う
					String[] line_data = line.split(" ");
					
					// 指定した文字より後ろの文字取り出し
				    int index = line_data[2].indexOf("P-NAME=\"");
				    String target = line_data[2].substring(index+1);

				    index = target.indexOf("\"");
				    target = target.substring(0,index);
					
				    System.out.println(target);
				}
				//変更しない場合はそのまま出力する
				else
				{
				
				}
				
				
			} //end while
		}
		catch(Exception e) { // ファイル読み込みエラー時の処理
			System.out.println("I/O error at readFile \n" + e);
			System.exit(1); //プログラムの終了
		}
	}


	// HashMapの内容をファイルに出力
	void outputHashMap(HashMap<String, String> hm, String of) {
		Set keys = hm.keySet();

		try {
			FileWriter fw = new FileWriter( of );
			BufferedWriter bw = new BufferedWriter( fw );
			PrintWriter pw = new PrintWriter( bw );

			for( Iterator itr = keys.iterator(); itr.hasNext(); ) {
				String exp = (String)itr.next();
				String value = hm.get(exp);
				pw.println(exp + ": " + value);// 文字列を書き出す
				pw.flush();
			}
			pw.close(); // 出力ストリームのクローズ
		}
		catch (IOException e) { // ファイル書き込みエラー時の処理
			System.out.println("I/O error at outputHashMap \n" + e);
			System.exit(1); //プログラムの終了
		}
	}


	void kadai(String inf, String of) {
		HashMap<String, String> dic_table; //英語-日本語の辞書を格納するHashMap
		dic_table = new HashMap<String, String>(101); // dic_tableのインスタンス化
		//辞書をdic_tableに格納する
		readDic(dic_table);
		//インプットファイルを読み込む
		readFile(dic_table, inf);
		
		outputHashMap(dic_table, of); //tf_table(HashMap)の内容を出力
	}


	public static void main(String[] args) {
		TIS20140227 tis = new TIS20140227(args[0]);

		tis.kadai(tis.data_file, tis.out_file);
	}

} //class HashMapSample3 end
